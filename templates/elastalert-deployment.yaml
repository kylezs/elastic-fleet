apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastalert
  labels:
    app: elastalert
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elastalert
  template:
    metadata:
      labels:
        app: elastalert
    spec:
      volumes:
        - name: elastalert-config
          configMap:
            name: elastalert-configmap
        - name: elastalert-rules
          configMap:
            name: elastalert-rules-configmap
        - name: smtp-auth
          secret:
            secretName: smtp-auth-secret
      containers:
      - name: elastalert
        # this image supports ES7
        image: bitsensor/elastalert:3.0.0-beta.0
        env:
          - name: ES_USERNAME
            valueFrom:
              secretKeyRef:
                name: elastic-credentials
                key: username
          - name: ES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elastic-credentials
                key: password
        volumeMounts:
          - name: elastalert-config
            readOnly: true
            mountPath: /opt/elastalert/config.yaml
            subPath: config.yaml
          - name: elastalert-rules
            readOnly: true
            mountPath: /opt/elastalert/rules
          - name: smtp-auth
            readOnly: true
            mountPath: /tmp/smtp/smtp_auth.yaml
            subPath: smtp_auth.yaml
---

# docker run -d -p 3030:3030 -p 3333:3333 \
#     -v `pwd`/config/elastalert.yaml:/opt/elastalert/config.yaml \
#     -v `pwd`/config/elastalert-test.yaml:/opt/elastalert/config-test.yaml \
#     -v `pwd`/config/config.json:/opt/elastalert-server/config/config.json \
#     -v `pwd`/rules:/opt/elastalert/rules \
#     -v `pwd`/rule_templates:/opt/elastalert/rule_templates \
#     --net="host" \
#     --name elastalert bitsensor/elastalert:latest