apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kolide-fleet.fullname" . }}
  labels:
    app: {{ template "kolide-fleet.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    {{- include "kolide-fleet.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kolide-fleet.selectorLabels" . | nindent 6 }}
      app: kolide-fleet
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "kolide-fleet.selectorLabels" . | nindent 8 }}
        app: kolide-fleet
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kolide-fleet.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: fleet-configuration
          configMap:
            name: {{ template "kolide-fleet.fullname" . }}
        - name: fleet-logs
          emptyDir: {}
        - name: fleet-tls
          secret:
            secretName: {{template "kolide-fleet.fullname" . }}-tls
        - name: filebeat-configuration
          configMap:
            name: filebeat-config
        - name: elastic-cert
          secret:
            secretName: elastic-certificate-pem
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: KOLIDE_AUTH_JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "kolide-fleet.fullname" . }}
                  key: fleet.auth.jwt_key
            - name: KOLIDE_MYSQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "kolide-fleet.fullname" . }}
                  key: fleet.mysql.username
            - name: KOLIDE_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "kolide-fleet.fullname" . }}
                  key: fleet.mysql.password
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "fleet"
            - "serve"
            - "--config"
            - "/etc/fleet/config.yml"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: fleet-configuration
              readOnly: true
              mountPath: /etc/fleet
            - name: fleet-logs
              readOnly: false
              mountPath: {{ .Values.fleet.filesystem.result_volume }}
            - name: fleet-tls
              readOnly: true
              mountPath: /etc/pki/fleet
        - name: filebeat-sidecar
          image: docker.elastic.co/beats/filebeat:7.7.0
          env:
          - name: ELASTICSEARCH_HOST
            value: elasticsearch
          - name: ELASTICSEARCH_PORT
            value: "9200"
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elastic-credentials
                key: password
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                name: elastic-credentials
                key: username
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          args:
            - "-c"
            - "/etc/filebeat.yml"
          # Mount to the same volume, so we can collect the logs
          volumeMounts:
            - name: fleet-logs
              readOnly: true
              mountPath: {{ .Values.fleet.filesystem.result_volume }}
            - name: filebeat-configuration
              # location of filebeat.yml
              mountPath: /etc/filebeat.yml
              subPath: filebeat.yml
              readOnly: true
            - name: elastic-cert
              readOnly: true
              mountPath: /etc/pki/root


