---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kibana-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  tls:
    - hosts:
        - fixpanel.org
      secretName: letsencrypt-prod-tls
  rules:
    - host: fixpanel.org
      http:
        paths:
          - backend:
              serviceName: {{ .Release.Name }}-kibana
              servicePort: 5601
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: fleet-ui-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  tls:
    - hosts:
        - fleet.fixpanel.org
      secretName: letsencrypt-prod-tls
  rules:
    - host: fleet.fixpanel.org
      http:
        paths:
          - backend:
              serviceName: {{ .Release.Name }}-kolide-fleet
              servicePort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: fleet-grpc-agent-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
    # sometimes buffered logs can increase in size, this is
    # far greater than should ever be necessary
    nginx.ingress.kubernetes.io/proxy-body-size: 300M
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  tls:
    - hosts:
        - fleet.fixpanel.org
      secretName: letsencrypt-prod-tls
  rules:
    - host: fleet.fixpanel.org
      http:
        paths:
          - path: "/kolide.agent.Api"
            backend:
              serviceName: {{ .Release.Name }}-kolide-fleet
              servicePort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: fleet-grpc-targets-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
    nginx.ingress.kubernetes.io/grpc-backend: "true"
spec:
  tls:
    - hosts:
        - fleet.fixpanel.org
      secretName: letsencrypt-prod-tls
  rules:
    - host: fleet.fixpanel.org
      http:
        paths:
          - path: "/kolide.launcher.QueryTarget/GetTargets"
            backend:
              serviceName: {{ .Release.Name }}-kolide-fleet
              servicePort: 8080
# # ---
# # apiVersion: networking.k8s.io/v1beta1
# # kind: Ingress
# # metadata:
# #   name: fixpanel-websocket-ingress
# #   annotations:
# #     kubernetes.io/ingress.class: nginx
# #     nginx.ingress.kubernetes.io/configuration-snippet: |
# #       proxy_http_version 1.1;
# #       proxy_set_header Upgrade "websocket";
# #       proxy_set_header Connection "Upgrade";
# # spec:
# #   tls:
# #     - hosts:
# #         - fleet.fixpanel.org
# #       secretName: letsencrypt-staging-tls
# #   rules:
# #     - host: fleet.fixpanel.org
# #       http:
# #         paths:
# #           - path: "/api/v1/kolide/results/"
# #             backend:
# #               serviceName: kf-kolide-fleet
# #               servicePort: 8080


# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: elasticsearch-post-ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#     nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
# spec:
#   tls:
#     - hosts:
#         - fixpanel.org
#       secretName: letsencrypt-prod-tls
#   rules:
#     - host: fixpanel.org
#       http:
#         paths:
#           - path: "/mobile-index/_doc"
#             backend:
#               serviceName: elasticsearch-master
#               servicePort: 9200
# ---